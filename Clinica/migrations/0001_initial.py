# Generated by Django 3.1.7 on 2021-06-09 03:36

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import smart_selects.db_fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Especialidad', models.CharField(blank=True, default='', max_length=60, null=True, verbose_name='Especialidad')),
            ],
        ),
        migrations.CreateModel(
            name='ExpedientePaciente',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nombres', models.CharField(max_length=50, verbose_name='Nombres')),
                ('ApellidoPaterno', models.CharField(max_length=50, verbose_name='Apellido paterno')),
                ('ApellidoMaterno', models.CharField(max_length=50, verbose_name='Apellido materno')),
                ('Genero', models.CharField(choices=[('H', 'Hombre'), ('M', 'Mujer')], max_length=1, verbose_name='Género')),
                ('Nacimiento', models.DateField(verbose_name='Fecha de nacimiento')),
                ('Direccion', models.CharField(max_length=80, verbose_name='Direccion')),
                ('Correo', models.EmailField(max_length=50, verbose_name='Correo electrónico')),
                ('Telefono', models.CharField(max_length=12, verbose_name='Telefono')),
                ('Alergias', models.CharField(max_length=200, verbose_name='Alergias')),
                ('Padecimientos', models.CharField(max_length=200, verbose_name='Padecimientos')),
                ('FechaCreacion', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tratamiento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Tratamiento', models.CharField(max_length=50, verbose_name='Tratamiento')),
                ('Descripcion', models.CharField(max_length=200, verbose_name='Descripcion')),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=50, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='Usuario')),
                ('TipoEmpleado', models.CharField(choices=[('A', 'Administrador'), ('R', 'Recepcionista'), ('D', 'Doctor')], default='A', max_length=1, verbose_name='Tipo de empleado')),
                ('Nombres', models.CharField(blank=True, max_length=50, verbose_name='Nombres')),
                ('ApellidoPaterno', models.CharField(blank=True, max_length=50, verbose_name='Apellido paterno')),
                ('ApellidoMaterno', models.CharField(blank=True, max_length=50, verbose_name='Apellido materno')),
                ('Genero', models.CharField(blank=True, choices=[('H', 'Hombre'), ('M', 'Mujer')], max_length=1, verbose_name='Género')),
                ('Nacimiento', models.DateField(blank=True, null=True, verbose_name='Fecha de nacimiento')),
                ('email', models.EmailField(blank=True, max_length=50, verbose_name='Correo electrónico')),
                ('Telefono', models.CharField(max_length=12, null=True, verbose_name='Telefono')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creacion')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Nota',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nota', models.CharField(max_length=200, verbose_name='Nota')),
                ('FechaCreacion', models.DateTimeField(auto_now_add=True)),
                ('Expedientepaciente', models.OneToOneField(on_delete=django.db.models.deletion.RESTRICT, to='Clinica.expedientepaciente', verbose_name='Expediente del paciente')),
            ],
        ),
        migrations.CreateModel(
            name='Hora',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Dia', models.CharField(blank=True, choices=[('Domingo', 'Domingo'), ('Lunes', 'Lunes'), ('Martes', 'Martes'), ('Miercoles', 'Miercoles'), ('Jueves', 'Jueves'), ('Viernes', 'Viernes'), ('Sabado', 'Sabado')], max_length=10, verbose_name='Género')),
                ('Hora', models.TimeField()),
                ('Doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Clinica.doctor', verbose_name='Doctor')),
            ],
            options={
                'unique_together': {('Doctor', 'Dia', 'Hora')},
            },
        ),
        migrations.CreateModel(
            name='Doctor_Tratamiento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Clinica.doctor', verbose_name='Doctor')),
                ('Tratamiento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Clinica.tratamiento', verbose_name='Tratamiento')),
            ],
            options={
                'unique_together': {('Doctor', 'Tratamiento')},
            },
        ),
        migrations.AddField(
            model_name='doctor',
            name='Tratamientos',
            field=models.ManyToManyField(through='Clinica.Doctor_Tratamiento', to='Clinica.Tratamiento'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='Usuario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Cita',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Fecha', models.DateField(verbose_name='Fecha')),
                ('FechaCreacion', models.DateTimeField(auto_now_add=True)),
                ('Doctor', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='Clinica.doctor', verbose_name='Doctor')),
                ('ExpedientePaciente', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='Clinica.expedientepaciente', verbose_name='Expediente del paciente')),
                ('HoraInicio', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='Doctor', chained_model_field='Doctor', on_delete=django.db.models.deletion.CASCADE, to='Clinica.hora')),
                ('Tratamiento', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='Doctor', chained_model_field='Doctor', on_delete=django.db.models.deletion.CASCADE, to='Clinica.tratamiento')),
            ],
        ),
    ]
